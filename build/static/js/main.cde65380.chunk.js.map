{"version":3,"sources":["components/error-message/error-image.jpg","components/navbar/navbar.js","services/get-data.js","components/spinner/spinner.js","components/error-message/error-message.js","components/random-film/random-film.js","components/item-list/item-list.js","components/pages/people-page.js","components/pages/planets-page.js","components/pages/species-page.js","components/details/person-details.js","components/details/planet-details.js","components/details/species-details.js","components/app/app.js","index.js"],"names":["module","exports","Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","GetData","_baseUrl","getData","url","a","fetch","res","ok","Error","status","json","getFilm","getPlanet","getPerson","getSpecies","getAllFilms","results","getAllPlanets","getAllPeople","getAllSpecies","Spinner","ErrorMessage","src","icon","alt","RandomFilm","data","state","error","title","director","producer","release_date","this","getFilmData","number","Math","floor","random","then","film","setState","episode_id","catch","React","Component","ItemList","itemList","props","arr","map","item","match","key","name","onClick","onItemSelected","element","renderName","withRouter","history","Id","push","PersonDetails","person","loading","getItemData","prevProps","itemId","gender","height","hair_color","skin_color","eye_color","PlanetDetails","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","population","SpeciesDetails","species","classification","designation","hair_colors","skin_colors","eye_colors","average_height","average_lifespan","App","selectedPerson","onPersonSelected","path","exact","render","Fragment","params","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.cde65380.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-image.84ad249e.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.css\";\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bgColor rounded mb-4\">\r\n            <Link to=\"/\" className=\"navbar-brand nav-link\" >\r\n                <h3 className=\"mb-1\">SW Data</h3>\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item ml-2\">\r\n                        <Link to=\"/people/\" className=\"nav-link\">People</Link>\r\n                    </li>\r\n                    <li className=\"nav-item ml-2 \">\r\n                        <Link to=\"/species/\" className=\"nav-link\">Species</Link>\r\n                    </li>\r\n                    <li className=\"nav-item ml-2\">\r\n                        <Link to=\"/planets/\" className=\"nav-link\">Planets</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","\r\nexport default class GetData {\r\n    _baseUrl = \"https://swapi.dev/api/\";\r\n\r\n    getData = async (url) => {\r\n        const res = await fetch(`${this._baseUrl}${url}`);\r\n        if (!res.ok) {\r\n            throw new Error(`Server can't fetch ${url}, got \r\n                ${res.status} status`)\r\n        };\r\n        return res.json();\r\n    };\r\n\r\n    getFilm = async (url) => {\r\n        const res = await this.getData(`films/${url}`);\r\n        return res;\r\n    };\r\n\r\n    getPlanet = async (url) => {\r\n        const res = await this.getData(`planets/${url}`);\r\n        return res;\r\n    };\r\n\r\n    getPerson = async (url) => {\r\n        const res = await this.getData(`people/${url}`);\r\n        return res;\r\n    };\r\n\r\n    getSpecies = async (url) => {\r\n        const res = await this.getData(`species/${url}`);\r\n        return res;\r\n    };\r\n\r\n    getAllFilms = async () => {\r\n        const res = await this.getData(`films`);\r\n        return res.results;\r\n    };\r\n\r\n    getAllPlanets = async () => {\r\n        const res = await this.getData(`planets`);\r\n        return res.results;\r\n    };\r\n\r\n    getAllPeople = async () => {\r\n        const res = await this.getData(`people`);\r\n        return res.results;\r\n    };\r\n\r\n    getAllSpecies = async () => {\r\n        const res = await this.getData(`species`);\r\n        return res.results;\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport \"./spinner.css\"\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader d-flex justify-content-center\">\r\n            <div className=\"box-1 box\"></div>\r\n            <div className=\"box-2 box\"></div>\r\n            <div className=\"box-3 box\"></div>\r\n            <div className=\"box-4 box\"></div>\r\n            <div className=\"box-5 box\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport \"./error-message.css\";\r\nimport icon from \"./error-image.jpg\";\r\n\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className=\"ErrorMessage rounded d-flex flex-column bgColor align-items-center my-4 p-3\">\r\n            <img src={icon} alt=\"error icon\"></img>\r\n            <h4 className=\"mt-2 text-danger\">It's Error!</h4>\r\n            <span className=\"text-danger\">We have already sent droids to fix it</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import React from \"react\";\r\nimport \"./random-film.css\";\r\nimport GetData from \"../../services/get-data\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../error-message/error-message\";\r\n\r\n\r\n\r\nexport default class RandomFilm extends React.Component {\r\n    data = new GetData();\r\n    \r\n    state = {\r\n        error: false,\r\n        id: null,\r\n        title: null,\r\n        director: null,\r\n        producer: null,\r\n        release_date: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getFilmData()\r\n    };\r\n\r\n    getFilmData() {\r\n        const number = Math.floor(Math.random() * 7) + 1;\r\n\r\n        this.data.getFilm(number)\r\n            .then((film) => {\r\n                this.setState({\r\n                    id: (film.episode_id - 3),\r\n                    title: film.title,\r\n                    director: film.director,\r\n                    producer: film.producer,\r\n                    release_date: film.release_date\r\n                });\r\n\r\n                if (number > 3) {\r\n                    this.setState({ id: (film.episode_id + 3) });\r\n                };\r\n\r\n                if (this.state.id === 10) { this.setState({ id: 7 }) };\r\n            })\r\n            .catch(() => {\r\n                this.setState({ error: true });\r\n            });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { error, id, title, director, producer, release_date } = this.state;\r\n\r\n\r\n        if (error) {\r\n            return <ErrorMessage />;\r\n        };\r\n\r\n        if (!id) {\r\n            return (\r\n                <div className=\"bgColor rounded mb-4 py-5 d-flex justify-content-center\">\r\n                    <Spinner />\r\n                </div>\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div className=\"RandomFilm bgColor rounded d-flex mb-4\" >\r\n                <img className=\"img-fluid rounded m-3\"\r\n                    src={`https://starwars-visualguide.com/assets/img/films/${id}.jpg`}\r\n                    alt=\"Film\" >\r\n                </img>\r\n                <ul className=\"m-3 pl-0\">\r\n                    <h4>{title}</h4>\r\n                    <li className=\"mb-1 mt-4\">\r\n                        <span className=\"font-weight-bold mr-2\">Director:</span> {director}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Producer:</span> {producer}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Release date:</span> {release_date}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport \"./item-list.css\";\r\nimport ErrorMessage from \"../error-message/error-message\";\r\n\r\n\r\n\r\nexport default class ItemList extends React.Component {\r\n\r\n    state = {\r\n        itemList: null,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getData()\r\n            .then((itemList) => {\r\n                this.setState({ itemList })\r\n            })\r\n            .catch(() => {\r\n                this.setState({ error: true });\r\n            });\r\n    };\r\n\r\n    renderName(arr) {\r\n        return arr.map((item) => {\r\n            const idRegExp = /\\/([0-9]*)\\/$/;\r\n            const id = item.url.match(idRegExp)[1];\r\n            return (\r\n                <li className=\"list-group-item bgColor\"\r\n                    key={item.name}\r\n                    onClick={() => this.props.onItemSelected(id)}>\r\n                    {item.name}</li>\r\n            );\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { itemList, error } = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorMessage />\r\n        };\r\n\r\n        if (!itemList) {\r\n            return <Spinner />\r\n        };\r\n\r\n        const element = this.renderName(itemList);\r\n        return (\r\n            <ul className=\"Item-List list-group mb-4\">\r\n                {element}\r\n            </ul>\r\n        );\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport ItemList from \"../item-list/item-list\";\r\nimport GetData from \"../../services/get-data\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst PeoplePage = ({ history }) => {\r\n    const data = new GetData();\r\n\r\n    return (\r\n        <ItemList\r\n            getData={data.getAllPeople}\r\n            onItemSelected={(Id) => history.push(Id)}>\r\n        </ItemList>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(PeoplePage);","import React from \"react\";\r\nimport ItemList from \"../item-list/item-list\";\r\nimport GetData from \"../../services/get-data\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst PlanetsPage = ({ history }) => {\r\n    const data = new GetData();\r\n\r\n    return (\r\n        <ItemList\r\n            getData={data.getAllPlanets}\r\n            onItemSelected={(Id) => history.push(Id)}>\r\n        </ItemList>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(PlanetsPage);","import React from \"react\";\r\nimport ItemList from \"../item-list/item-list\";\r\nimport GetData from \"../../services/get-data\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst SpeciesPage = ({ history }) => {\r\n    const data = new GetData();\r\n\r\n    return (\r\n        <ItemList\r\n            getData={data.getAllSpecies}\r\n            onItemSelected={(Id) => history.push(Id)}>\r\n        </ItemList>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(SpeciesPage);","import React from \"react\";\r\nimport \"./details.css\";\r\nimport GetData from \"../../services/get-data\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../error-message/error-message\";\r\n\r\n\r\n\r\nexport default class PersonDetails extends React.Component {\r\n    data = new GetData();\r\n\r\n    state = {\r\n        person: null,\r\n        error: false,\r\n        loading: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getItemData();\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.getItemData();\r\n            this.setState({ loading: true });\r\n        };\r\n    };\r\n\r\n    getItemData() {\r\n        this.data.getPerson(this.props.itemId)\r\n            .then((person) => {\r\n                this.setState({ person, loading: false });\r\n            })\r\n            .catch(() => {\r\n                this.setState({ error: true });\r\n            });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { error, person, loading } = this.state;\r\n\r\n        if (error) {\r\n            return (\r\n                <ErrorMessage />\r\n            );\r\n        };\r\n\r\n        if (loading || !person) {\r\n            return <Spinner />\r\n        };\r\n\r\n        const { name, gender, height, hair_color, skin_color,\r\n            eye_color } = this.state.person;\r\n\r\n        return (\r\n            <div className=\"PersonDetails bgColor rounded d-flex mb-4\">\r\n                <img className=\"img-fluid rounded m-3\"\r\n                    src={`https://starwars-visualguide.com/assets/img/characters/${this.props.itemId}.jpg`}\r\n                    alt=\"Person\">\r\n                </img>\r\n                <ul className=\"m-3 pl-0\">\r\n                    <h4>{name}</h4>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Gender:</span> {gender}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Height:</span> {height} cm\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Hair color:</span> {hair_color}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Skin color:</span> {skin_color}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Eye color:</span> {eye_color}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport \"./details.css\";\r\nimport GetData from \"../../services/get-data\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../error-message/error-message\";\r\n\r\n\r\n\r\nexport default class PlanetDetails extends React.Component {\r\n    data = new GetData();\r\n\r\n    state = {\r\n        planet: null,\r\n        error: false,\r\n        loading: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getItemData();\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.getItemData();\r\n            this.setState({ loading: true });\r\n        };\r\n    };\r\n\r\n    getItemData() {\r\n        this.data.getPlanet(this.props.itemId)\r\n            .then((planet) => {\r\n                this.setState({ planet, loading: false });\r\n            })\r\n            .catch(() => {\r\n                this.setState({ error: true });\r\n            });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { error, planet, loading } = this.state;\r\n\r\n        if (error) {\r\n            return (\r\n                <ErrorMessage />\r\n            );\r\n        };\r\n\r\n        if (loading || !planet) {\r\n            return <Spinner />\r\n        };\r\n\r\n        const { name, rotation_period, orbital_period, diameter, climate,\r\n            gravity, terrain, population } = this.state.planet;\r\n\r\n        return (\r\n            <div className=\"PlanetDetails bgColor rounded d-flex mb-4\">\r\n                <img className=\"img-fluid rounded m-3\"\r\n                    src={`https://starwars-visualguide.com/assets/img/planets/${this.props.itemId}.jpg`}\r\n                    alt=\"Planet\">\r\n                </img>\r\n                <ul className=\"m-3 pl-0\">\r\n                    <h4>{name}</h4>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Rotation period:</span> {rotation_period} days\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Orbital period:</span> {orbital_period} days\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Diameter:</span> {diameter} km\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Climate:</span> {climate}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Gravity:</span> {gravity}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Terrain:</span> {terrain}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Population:</span> {population}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport \"./details.css\";\r\nimport GetData from \"../../services/get-data\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../error-message/error-message\";\r\n\r\n\r\n\r\nexport default class SpeciesDetails extends React.Component {\r\n    data = new GetData();\r\n\r\n    state = {\r\n        species: null,\r\n        error: false,\r\n        loading: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getItemData();\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.getItemData();\r\n            this.setState({ loading: true });\r\n        };\r\n    };\r\n\r\n    getItemData() {\r\n        this.data.getSpecies(this.props.itemId)\r\n            .then((species) => {\r\n                this.setState({ species, loading: false });\r\n            })\r\n            .catch(() => {\r\n                this.setState({ error: true });\r\n            });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { error, species, loading } = this.state;\r\n\r\n        if (error) {\r\n            return (\r\n                <ErrorMessage />\r\n            );\r\n        };\r\n\r\n        if (loading || !species) {\r\n            return <Spinner />\r\n        };\r\n\r\n        const { name, classification, designation, hair_colors, skin_colors,\r\n            eye_colors, average_height, average_lifespan } = this.state.species;\r\n\r\n        return (\r\n            <div className=\"SpeciesDetails bgColor rounded d-flex mb-4\">\r\n                <img className=\"img-fluid rounded m-3\"\r\n                    src={`https://starwars-visualguide.com/assets/img/species/${this.props.itemId}.jpg`}\r\n                    alt=\"Species\">\r\n                </img>\r\n                <ul className=\"m-3 pl-0\">\r\n                    <h4>{name}</h4>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Classification:</span> {classification}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Designation:</span> {designation}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Hair colors:</span> {hair_colors}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Skin colors:</span> {skin_colors}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Eye colors:</span> {eye_colors}\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Average height:</span> {average_height} cm\r\n                    </li>\r\n                    <li className=\"mb-1\">\r\n                        <span className=\"font-weight-bold mr-2\">Average lifespan:</span> {average_lifespan} years\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import \"./app.css\";\r\nimport React from \"react\";\r\nimport Navbar from \"../navbar/navbar\";\r\nimport RandomFilm from \"../random-film/random-film\";\r\nimport ErrorMessage from \"../error-message/error-message\"\r\nimport GetData from \"../../services/get-data\";\r\nimport PeoplePage from \"../pages/people-page\";\r\nimport PlanetsPage from \"../pages/planets-page\";\r\nimport SpeciesPage from \"../pages/species-page\";\r\nimport PersonDetails from \"../details/person-details\";\r\nimport PlanetDetails from \"../details/planet-details\";\r\nimport SpeciesDetails from \"../details/species-details\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n    data = new GetData();\r\n\r\n    state = {\r\n        selectedPerson: null,\r\n        error: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({ error: true })\r\n    };\r\n\r\n    onPersonSelected = (id) => {\r\n        this.setState({ selectedPerson: id });\r\n    };\r\n\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        };\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Router>\r\n                    <Navbar />\r\n                    <RandomFilm />\r\n                    <Route path=\"/\" exact render={() =>\r\n                        <React.Fragment>\r\n                            <h3>Welcome to SW Data!</h3>\r\n                            <span>You may choose something from Top menu</span>\r\n                        </React.Fragment>\r\n                    } />\r\n\r\n                    <Route path=\"/people\" exact render={() => <PeoplePage />} />\r\n                    <Route path=\"/people/:id\" \r\n                    render={({ match }) => {\r\n                        const { id } = match.params;\r\n                        return <PersonDetails itemId={id} />\r\n                    }} />\r\n\r\n                    <Route path=\"/planets\" exact render={() => <PlanetsPage />} />\r\n                    <Route path=\"/planets/:id\" render={({ match }) => {\r\n                        const { id } = match.params;\r\n                        return <PlanetDetails itemId={id} />\r\n                    }} />\r\n\r\n                    <Route path=\"/species\" exact render={() => <SpeciesPage />} />\r\n                    <Route path=\"/species/:id\" render={({ match }) => {\r\n                        const { id } = match.params;\r\n                        return <SpeciesDetails itemId={id} />\r\n                    }} />\r\n                </Router>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/app/app\";\n\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}